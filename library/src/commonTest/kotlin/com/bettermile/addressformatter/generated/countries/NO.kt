// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class NO {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun house_in_Oslo() {
    // description: house in Oslo
    val components = mapOf("city" to "Oslo", "city_district" to "Gamle Oslo", "country" to "Norway", "country_code" to "no", "county" to "Oslo", "house_number" to "28", "neighbourhood" to "Arctanderbyen", "postcode" to "0650", "road" to "Åkebergveien", "state" to "Oslo", "suburb" to "Enerhaugen")
    val expected = """
        |Åkebergveien 28
        |0650 Oslo
        |Norway
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun house_in_village_with_postal_city() {
    // description: house in village with postal_city
    val components = mapOf("country" to "Norge", "country_code" to "no", "county" to "Viken", "house_number" to "33", "neighbourhood" to "Belset", "postal_city" to "Rykkinn", "postcode" to "1349", "road" to "Grindstuveien", "suburb" to "Angerst", "village" to "Ringvoll")
    val expected = """
        |Grindstuveien 33
        |1349 Rykkinn
        |Norge
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
