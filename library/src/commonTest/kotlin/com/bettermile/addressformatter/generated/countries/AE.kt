// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class AE {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun L_Arabia_Hotel_24_37253_54_53801() {
    // description: L'Arabia Hotel, 24.37253,54.53801
    val components = mapOf("city" to "Abu Dhabi", "country" to "United Arab Emirates", "country_code" to "ae", "hotel" to "L'Arabia hotel", "postcode" to "277", "road" to "28th Street", "state" to "Abu Dhabi", "suburb" to "Police Officers City")
    val expected = """
        |L'Arabia hotel
        |28th Street
        |Police Officers City
        |Abu Dhabi
        |United Arab Emirates
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun L_Arabia_Hotel_language_ar_24_37253_54_53801() {
    // description: L'Arabia Hotel, language=ar, 24.37253,54.53801
    val components = mapOf("city" to "أبو ظبي", "country" to "الإمارات العربية المتحدة", "country_code" to "ae", "hotel" to "L'Arabia hotel", "postcode" to "277", "road" to "28th Street", "state" to "أبو ظبي", "suburb" to "Police Officers City")
    val expected = """
        |L'Arabia hotel
        |28th Street
        |Police Officers City
        |أبو ظبي
        |الإمارات العربية المتحدة
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Pizza_hut_24_37289_54_51820() {
    // description: Pizza hut, 24.37289,54.51820
    val components = mapOf("city" to "Abu Dhabi", "country" to "United Arab Emirates", "country_code" to "ae", "postcode" to "277", "restaurant" to "Pizza Hut", "road" to "8th Street", "state" to "Abu Dhabi", "suburb" to "Police Officers City")
    val expected = """
        |Pizza Hut
        |8th Street
        |Police Officers City
        |Abu Dhabi
        |United Arab Emirates
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Thumbay_Hospital_25_28130_55_36503() {
    // description: Thumbay Hospital, 25.28130/55.36503
    val components = mapOf("city" to "Dubai", "country" to "United Arab Emirates", "country_code" to "ae", "hospital" to "Thumbay Hospital", "postcode" to "47602", "residential" to "Al Qusais 1", "road" to "Street 4", "state" to "Dubai", "suburb" to "Al Qusais 1")
    val expected = """
        |Thumbay Hospital
        |Street 4
        |Al Qusais 1
        |Dubai
        |United Arab Emirates
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun International_Media_Production_Zone_25_0299178_55_1872123() {
    // description: International Media Production Zone, 25.0299178/55.1872123
    val components = mapOf("country" to "United Arab Emirates", "country_code" to "ae", "postcode" to "0448", "state" to "Dubai", "suburb" to "International Media Production Zone")
    val expected = """
        |International Media Production Zone
        |Dubai
        |United Arab Emirates
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
