// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class RU {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun cafe_near_59_9313605_30_3175201() {
    // description: cafe near 59.9313605,30.3175201
    val components = mapOf("cafe" to "Efes Istambul", "city" to "Сенной округ", "house_number" to "23", "postcode" to "190000", "road" to "Гороховая улица", "state" to "Санкт-Петербург", "state_district" to "Адмиралтейский район", "country" to "Российская Федерация", "country_code" to "ru")
    val expected = """
        |Efes Istambul
        |Гороховая улица, 23
        |Сенной округ
        |Санкт-Петербург
        |Российская Федерация
        |190000
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun village_55_8931701_63_7019487() {
    // description: village 55.8931701, 63.7019487
    val components = mapOf("city" to "Батуринский сельсовет", "country" to "Россия", "country_code" to "ru", "county" to "Шадринский район", "hamlet" to "Камчатка", "state" to "Курганская область")
    val expected = """
        |Камчатка
        |Батуринский сельсовет
        |Шадринский район
        |Россия
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun use_island_name() {
    // description: use island name
    val components = mapOf("city" to "Малиновараккское сельское поселение", "country" to "Россия", "country_code" to "ru", "county" to "Лоухский район", "island" to "Ярославль", "state" to "Республика Карелия")
    val expected = """
        |Ярославль
        |Малиновараккское сельское поселение
        |Лоухский район
        |Россия
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
