// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class VA {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Building_in_Vatican_City_41_90586_12_45105() {
    // description: Building in Vatican City, 41.90586,12.45105
    val components = mapOf("building" to "Gallinaro Tower", "country" to "Vatican City", "country_code" to "va", "postcode" to "00120", "road" to "Viale San Benedetto")
    val expected = """
        |Gallinaro Tower
        |Viale San Benedetto
        |00120
        |Vatican City
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun supermarket_in_Vatican_City_41_9046_12_4566() {
    // description: supermarket in Vatican City, 41.9046,12.4566
    val components = mapOf("country" to "Vatican City", "country_code" to "va", "postcode" to "00120", "road" to "Press Way", "supermarket" to "Vatican Supermarket", "town" to "Vatican City")
    val expected = """
        |Vatican Supermarket
        |Press Way
        |00120
        |Vatican City
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
