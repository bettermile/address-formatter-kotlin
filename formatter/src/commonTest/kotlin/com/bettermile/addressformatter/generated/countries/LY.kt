// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class LY {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Hotel_32_88945_13_17402() {
    // description: Hotel, 32.88945,13.17402
    val components = mapOf("city" to "Tripoli", "country" to "Libya", "country_code" to "ly",
        "hotel" to "Capital Hotel", "postcode" to "82510", "road" to "Arasafi",
        "state" to "Tripoli", "suburb" to "Old City المدينة القديمه")
    val expected = """
        |Capital Hotel
        |Arasafi
        |Tripoli
        |Libya
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Hotel_language_ar_32_88945_13_17402() {
    // description: Hotel, language=ar 32.88945,13.17402
    val components = mapOf("city" to "طرابلس", "country" to "ليبيا", "country_code" to "ly",
        "hotel" to "Capital Hotel", "postcode" to "82510", "road" to "Arasafi", "state" to "طرابلس",
        "suburb" to "Old City المدينة القديمه")
    val expected = """
        |Capital Hotel
        |Arasafi
        |طرابلس
        |ليبيا
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Supermarket_32_88791_13_21650() {
    // description: Supermarket, 32.88791,13.21650
    val components = mapOf("city" to "Tripoli", "country" to "Libya", "country_code" to "ly",
        "postcode" to "82510", "road" to "Shara Muhammad Soukny", "state" to "Tripoli",
        "suburb" to "Bab Tajura", "supermarket" to "Suuq Nufleen")
    val expected = """
        |Suuq Nufleen
        |Shara Muhammad Soukny
        |Tripoli
        |Libya
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Convenience_store_31_92505_12_24794() {
    // description: Convenience store, 31.92505,12.24794
    val components = mapOf("city" to "Az zintan", "country" to "Libya", "country_code" to "ly",
        "road" to "طريق الصلوعة", "shop" to "محل مواد غدائية", "state" to "Jabal al Gharbi")
    val expected = """
        |محل مواد غدائية
        |طريق الصلوعة
        |Az zintan
        |Libya
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Convenience_store_language_ar_31_92505_12_24794() {
    // description: Convenience store, language=ar, 31.92505,12.24794
    val components = mapOf("city" to "الزنتان", "country" to "ليبيا", "country_code" to "ly",
        "road" to "طريق الصلوعة", "shop" to "محل مواد غدائية", "state" to "الجبل الغربي")
    val expected = """
        |محل مواد غدائية
        |طريق الصلوعة
        |الزنتان
        |ليبيا
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
