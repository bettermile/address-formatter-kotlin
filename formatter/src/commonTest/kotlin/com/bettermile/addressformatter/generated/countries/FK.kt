// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class FK {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Hotel_in_Stanley_51_69328_57_86325() {
    // description: Hotel in Stanley, -51.69328,-57.86325
    val components = mapOf("building" to "Rose Hotel", "country" to "Falkland Islands",
        "country_code" to "fk", "house_number" to "1", "residential" to "Port Stanley",
        "road" to "Brisbane Road", "town" to "Stanley")
    val expected = """
        |Rose Hotel
        |1 Brisbane Road
        |Stanley
        |Falkland Islands
        |United Kingdom
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun middle_of_nowhere_51_70_58_62() {
    // description: middle of nowhere, -51.70,-58.62
    val components = mapOf("continent" to "South America", "country" to "Falkland Islands",
        "country_code" to "fk")
    val expected = """
        |Falkland Islands
        |United Kingdom
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
