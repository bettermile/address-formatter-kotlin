// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class BH {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Supermarket_26_16969_50_55565() {
    // description: Supermarket, 26.16969,50.55565
    val components = mapOf("country" to "Bahrain", "country_code" to "bh", "postcode" to "814",
        "road" to "Al-Doha Avenue", "state" to "Central Governorate", "supermarket" to "Ramaz",
        "town" to "Isa Town")
    val expected = """
        |Ramaz
        |Al-Doha Avenue
        |Isa Town 814
        |Bahrain
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Supermarket_language_ar_26_16969_50_55565() {
    // description: Supermarket, language=ar, 26.16969,50.55565
    val components = mapOf("country" to "البحرين", "country_code" to "bh", "postcode" to "814",
        "road" to "Al-Doha Avenue", "state" to "المحافظة الوسطى", "supermarket" to "Ramaz",
        "town" to "مدينة عيسى‎")
    val expected = """
        |Ramaz
        |Al-Doha Avenue
        |مدينة عيسى‎ 814
        |البحرين
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Hair_Saloon_26_22820_50_59449() {
    // description: Hair Saloon, 26.22820,50.59449
    val components = mapOf("city" to "Manama", "country" to "Bahrain", "country_code" to "bh",
        "hairdresser" to "Kerala Saloon", "postcode" to "301", "road" to "2115,",
        "state" to "Capital Governorate", "suburb" to "Gudaibiya")
    val expected = """
        |Kerala Saloon
        |2115
        |Manama 301
        |Bahrain
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Health_Centre_26_23556_50_59452() {
    // description: Health Centre, 26.23556,50.59452
    val components = mapOf("city" to "Manama", "country" to "Bahrain", "country_code" to "bh",
        "doctors" to "Al Hoora Health Centre", "postcode" to "317", "road" to "1910,",
        "state" to "Capital Governorate", "suburb" to "Al Hoora")
    val expected = """
        |Al Hoora Health Centre
        |1910
        |Manama 317
        |Bahrain
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
