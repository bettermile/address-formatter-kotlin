// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class IR {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Tower_in_Tehran_35_699_51_33810() {
    // description: Tower in Tehran, 35.699,51.33810
    val components = mapOf("attraction" to "Azadi Tower", "city" to "Tehran", "country" to "Iran",
        "country_code" to "ir", "postcode" to "1351956118", "road" to "Azadi Square",
        "suburb" to "Ostad Moein")
    val expected = """
        |Azadi Tower
        |Tehran
        |Ostad Moein
        |Azadi Square
        |1351956118
        |Iran
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun district_should_be_treated_as_alias_of_state_district() {
    // description: district should be treated as alias of state_district
    val components = mapOf("city" to "Tehran", "country" to "Iran", "country_code" to "ir",
        "district" to "بخش مرکزی شهرستان تهران", "province" to "Tehran Province")
    val expected = """
        |Tehran
        |بخش مرکزی شهرستان تهران
        |Iran
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
