// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class BE {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Restaurant_in_Antwerp_51_21038_4_39812() {
    // description: Restaurant in Antwerp, 51.21038,4.39812
    val components = mapOf("city" to "Antwerp", "city_district" to "Antwerpen",
        "country" to "Belgium", "country_code" to "be", "county" to "Antwerp",
        "house_number" to "63", "neighbourhood" to "Sint-Andries", "postcode" to "2000",
        "restaurant" to "Meat & Eat", "road" to "Vrijheidstraat", "state" to "Flanders")
    val expected = """
        |Meat & Eat
        |Vrijheidstraat 63
        |2000 Antwerp
        |Belgium
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun prefer_municipality_over_hamlet_50_5689247_5_3918483() {
    // description: prefer municipality over hamlet, 50.5689247, 5.3918483
    val components = mapOf("country" to "België", "country_code" to "be", "county" to "Huy",
        "hamlet" to "Clermont-sous-Huy", "house_number" to "187", "municipality" to "Engis",
        "postcode" to "4480", "region" to "Wallonia", "road" to "Chaussée de Liège",
        "state" to "Liège")
    val expected = """
        |Chaussée de Liège 187
        |4480 Engis
        |België
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun prefer_village_over_municipality_50_84201_4_11871() {
    // description: prefer village over municipality 50.84201, 4.11871
    val components = mapOf("country" to "Belgium", "country_code" to "be",
        "county" to "Halle-Vilvoorde", "municipality" to "Roosdaal", "postcode" to "1760",
        "region" to "Flanders", "road" to "Kerkveldstraat", "state" to "Flemish Brabant",
        "village" to "Strijtem")
    val expected = """
        |Kerkveldstraat
        |1760 Strijtem
        |Belgium
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun `50_62084_4_82240`() {
    // description: 50.62084,4.82240
    val components = mapOf("city_district" to "Perwez", "country" to "Belgium",
        "country_code" to "be", "county" to "Nivelles", "house_number" to "67",
        "postcode" to "1360", "region" to "Wallonia", "road" to "Rue Salmon",
        "state" to "Walloon Brabant", "village" to "Perwez")
    val expected = """
        |Rue Salmon 67
        |1360 Perwez
        |Belgium
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
