// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class LB {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Cinema_33_88591_35_50907() {
    // description: Cinema, 33.88591,35.50907
    val components = mapOf("cinema" to "Circuit Empire Sodeco", "city" to "Beirut", "country" to "Lebanon", "country_code" to "lb", "postcode" to "2052 6703", "road" to "Damascus Road", "state" to "Beirut Governorate", "suburb" to "Achrafieh")
    val expected = """
        |Circuit Empire Sodeco
        |Damascus Road
        |Beirut 2052 6703
        |Lebanon
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Cinema_language_ar_33_88591_35_50907() {
    // description: Cinema, language=ar, 33.88591,35.50907
    val components = mapOf("cinema" to "سيركوي امبير سوديكو", "city" to "بيروت", "country" to "الجمهورية اللبنانية", "country_code" to "lb", "postcode" to "2052 6703", "road" to "طريق الشام", "state" to "محافظة بيروت", "suburb" to "الأشرفية")
    val expected = """
        |سيركوي امبير سوديكو
        |طريق الشام
        |بيروت 2052 6703
        |الجمهورية اللبنانية
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Restaurant_33_89821_35_47893() {
    // description: Restaurant, 33.89821,35.47893
    val components = mapOf("city" to "Beirut", "country" to "Lebanon", "country_code" to "lb", "restaurant" to "Kushari Society", "road" to "Rue Mahatma Gandhi", "state" to "Beirut Governorate", "suburb" to "Ras Beirut")
    val expected = """
        |Kushari Society
        |Rue Mahatma Gandhi
        |Beirut
        |Lebanon
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Restaurant_language_ar_33_89821_35_47893() {
    // description: Restaurant, language=ar, 33.89821,35.47893
    val components = mapOf("city" to "بيروت", "country" to "الجمهورية اللبنانية", "country_code" to "lb", "restaurant" to "Kushari Society", "road" to "شارع المهتما غاندي", "state" to "محافظة بيروت", "suburb" to "رأس بيروت")
    val expected = """
        |Kushari Society
        |شارع المهتما غاندي
        |بيروت
        |الجمهورية اللبنانية
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Supermarket_34_43088_35_83017() {
    // description: Supermarket, 34.43088,35.83017
    val components = mapOf("city" to "Tripoli", "country" to "Lebanon", "country_code" to "lb", "road" to "شارع عشير الدايه", "state" to "Qada Tarablos", "supermarket" to "SEVEN TO TWELVE")
    val expected = """
        |SEVEN TO TWELVE
        |شارع عشير الدايه
        |Tripoli
        |Lebanon
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
