// Copyright 2022 GLS eCom Lab GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// THIS FILE IS AUTOGENERATED, PLEASE DON'T CHANGE IT MANUALLY
package com.bettermile.addressformatter.generated.countries

import com.bettermile.addressformatter.AddressFormatter
import kotlin.test.Test
import kotlin.test.assertEquals

public class EG {
  private val addressFormatter: AddressFormatter =
      AddressFormatter(abbreviate = false, appendCountry = false)

  @Test
  public fun Cultural_Centre_in_Giza_30_04248_31_22369() {
    // description: Cultural Centre in Giza, 30.04248,31.22369
    val components = mapOf("city" to "Giza", "country" to "Egypt", "country_code" to "eg",
        "museum" to "National Cultural Centre", "postcode" to "11231", "road" to "Mahmoud Mokhtar",
        "state" to "Giza Governorate", "suburb" to "Dokki")
    val expected = """
        |National Cultural Centre
        |Mahmoud Mokhtar
        |Dokki
        |Giza
        |11231
        |Egypt
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Policy_academy_30_06864_31_28709() {
    // description: Policy academy, 30.06864,31.28709
    val components = mapOf("city" to "Cairo", "country" to "Egypt", "country_code" to "eg",
        "postcode" to "11381", "road" to "Fakhry Abdel-Nur", "state" to "Cairo Governorate",
        "suburb" to "Abbasseya", "university" to "Police Academy")
    val expected = """
        |Police Academy
        |Fakhry Abdel-Nur
        |Abbasseya
        |Cairo
        |11381
        |Egypt
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Mosque_25_69992_32_63965() {
    // description: Mosque, 25.69992,32.63965
    val components = mapOf("city" to "Luxor", "country" to "Egypt", "country_code" to "eg",
        "pedestrian" to "Sphinx Alley", "place_of_worship" to "Abu Haggag Mosque",
        "state" to "Luxor Governate")
    val expected = """
        |Abu Haggag Mosque
        |Sphinx Alley
        |Luxor
        |Egypt
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun University_30_79623_30_99934() {
    // description: University, 30.79623,30.99934
    val components = mapOf("city" to "Tanta", "college" to "Tanta University", "country" to "Egypt",
        "country_code" to "eg", "postcode" to "31111", "road" to "Mohebb",
        "state" to "Gharbiyya Governorate", "suburb" to "Mahlet Marhoum")
    val expected = """
        |Tanta University
        |Mohebb
        |Mahlet Marhoum
        |Tanta
        |31111
        |Egypt
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }

  @Test
  public fun Same_univerisity_language_ar_30_79623_2C30_99934() {
    // description: Same univerisity, language=ar, 30.79623,2C30.99934
    val components = mapOf("city" to "‏طنطا", "college" to "جامعة طنطا", "country" to "مصر",
        "country_code" to "eg", "postcode" to "31111", "road" to "شارع محب",
        "state" to "‏محافظة الغربي", "suburb" to "محلة مرحوم")
    val expected = """
        |جامعة طنطا
        |شارع محب
        |محلة مرحوم
        |‏طنطا
        |31111
        |مصر
        |""".trimMargin()
    val actual = addressFormatter.format(components = components)
    assertEquals(expected, actual)
  }
}
